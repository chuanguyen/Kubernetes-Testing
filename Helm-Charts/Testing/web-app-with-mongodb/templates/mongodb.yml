---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  namespace: "{{ .Values.namespace }}"
  labels:
    app: "{{ .Values.appNameMongo }}"
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/instance: ""
    app.kubernetes.io/version: "1"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: "MongoDB"
    app.kubernetes.io/managed-by: ""
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.appNameMongo }}"
  template:
    metadata:
      namespace: "{{ .Values.namespace }}"
      labels:
        app: "{{ .Values.appNameMongo }}"
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/instance: ""
        app.kubernetes.io/version: "1"
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: "MongoDB"
        app.kubernetes.io/managed-by: "Helm"
    spec:
      containers:
        - name: mongodb
          image: "{{ .Values.images.mongo.name }}:{{ .Values.images.mongo.tag }}"
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.externalSecrets.mongo.target_name }}" # Name of the secret resource
                  key: mongodb-user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.externalSecrets.mongo.target_name }}" # Name of the secret resource
                  key: mongodb-password
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.mongoServiceName }}" # Acts as the endpoint for the service
  namespace: "{{ .Values.namespace }}"
spec:
  selector:
    app: "{{ .Values.appNameMongo }}" # Used to find pods that the service should redirect to
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
